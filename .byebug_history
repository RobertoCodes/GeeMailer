c
@conversation.emails
@conversation.email
@conversation
c
Conversation.includes(:emails).where("emails.starred = ?",true).references(:emails)
Conversation.includes(:emails).where("emails.starred = ?",false).references(:emails)
Conversation.includes(:emails).where("emails.starred = ?",false)
Conversation.includes(:emails).where("emails.starred = ?",false\)
Conversation.includes(:emails).where("emails.starred = ?",true)
Email.all
last_email
c
@conversations
c
current_user.conversations
current_user
exit
category_emails.first.find_relatives.order("id DESC").first
category_emails.first.find_relatives
category_emails
exit
c
Email.find_by_conversation_id(30)
self
c
Email.find_by_conversation_id(@email.id)
@emails
c
n
s
@email
c
@emails
@email
c
@email
@emails
c
email
n
s
self
self.class
result
@search_results
@emails
c
s
c
params
c
@email.toggle :read
a= params[:column].to_sym
a= params[:column].to_s
@email
c
n
s
c
s
@email
params[:column]
params[:column[
c
s
category
c
category
c
category
c
category
c
s
category
c
category
c
category
c
params[:category]
c
@children
@email
c
!!current_user
current_user
c
@current_user
c
current_user
user.session_token
session[:session_token]
c
signed_in?
signed_in
current_user
session[:session_token]
c
session[:session_token]
session[:session_token] =12
@user
user.session_token
session[:session_token]
session[:session]
session
c
s
user
c
User.find_by_session_token(session[:session_token])
session[:session_token]
session[:session_tokensss]
session[:session_token]
@current_user
c
@current_user
exit
current_user
s
